{"ast":null,"code":"import _slicedToArray from \"/Users/decagon/Documents/React/keeper-app-part-1-starting/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/decagon/Documents/React/keeper-app-part-1-starting/src/component/CreateArea.jsx\";\nimport React, { useState } from \"react\";\nfunction CreateArea() {\n  var _useState$return = useState.return( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"title\",\n      placeholder: \"Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"content\",\n      placeholder: \"Take a note...\",\n      rows: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }, \"Add\")))),\n    _useState$return2 = _slicedToArray(_useState$return, 2),\n    note = _useState$return2[0],\n    setNote = _useState$return2[1];\n}\nexport default CreateArea;\n\n//CHALLENGE:\n//1. Implement the add note functionality.\n//- Create a constant that keeps track of the title and content.\n//- Pass the new note back to the App.\n//- Add new note to an array.\n//- Take array and render seperate Note components for each item.","map":{"version":3,"names":["React","useState","CreateArea","return","note","setNote"],"sources":["/Users/decagon/Documents/React/keeper-app-part-1-starting/src/component/CreateArea.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction CreateArea() {\n    \n    const [note, setNote] = useState.\n\n    return (\n    <div>\n      <form>\n        <input name=\"title\" placeholder=\"Title\" />\n        <textarea name=\"content\" placeholder=\"Take a note...\" rows=\"3\" />\n        <button>Add</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n\n//CHALLENGE:\n//1. Implement the add note functionality.\n//- Create a constant that keeps track of the title and content.\n//- Pass the new note back to the App.\n//- Add new note to an array.\n//- Take array and render seperate Note components for each item.\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,UAAU,GAAG;EAElB,uBAAwBD,QAAQ,CAEhCE,MAAM,eACN;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAO,IAAI,EAAC,OAAO;MAAC,WAAW,EAAC,OAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,eAC1C;MAAU,IAAI,EAAC,SAAS;MAAC,WAAW,EAAC,gBAAgB;MAAC,IAAI,EAAC,GAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,eACjE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAQ,KAAG,CAAS,CACf,CACH,CACP;IAAA;IAVQC,IAAI;IAAEC,OAAO;AAWxB;AAEA,eAAeH,UAAU;;AAEzB;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}